# MCPHub v1.0.0 开发环境 Dockerfile
FROM node:22-slim

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    curl \
    gnupg \
    git \
    python3 \
    python3-pip \
    python3-venv \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# 安装 pnpm 和 uv
RUN npm install -g pnpm
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/

# 设置环境变量
ARG HTTP_PROXY=""
ARG HTTPS_PROXY=""
ENV HTTP_PROXY=$HTTP_PROXY \
    HTTPS_PROXY=$HTTPS_PROXY \
    NODE_ENV=development \
    PNPM_HOME=/usr/local/share/pnpm \
    PATH=$PNPM_HOME:$PATH

# 创建 pnpm 目录并安装全局 MCP 服务器
RUN mkdir -p $PNPM_HOME && \
    pnpm add -g \
    @amap/amap-maps-mcp-server \
    @playwright/mcp@latest \
    tavily-mcp@latest \
    @modelcontextprotocol/server-github \
    @modelcontextprotocol/server-slack

# 安装 Python MCP 工具
RUN uv tool install mcp-server-fetch

# 设置工作目录
WORKDIR /app

# 复制 package 配置文件
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY frontend/package.json ./frontend/

# 安装依赖
RUN pnpm install

# 复制启动脚本
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# 暴露端口
EXPOSE 3000 5173

# 设置入口点
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["sh", "-c", "pnpm frontend:dev & pnpm backend:dev"]
